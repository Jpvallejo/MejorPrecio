@model mejor_precio_3.Models.Searched


<script src="http://maps.google.com/maps/api/js?key=AIzaSyC-hZmexho9d0YR06bY7q_Bvqj0mcuOna4&sensor=true" type="text/javascript"></script> 
 
 
<style> 
    #map_canvas img { 
        max-width: none; 
    } 
</style> 
 
<!-- This css is to give a nice big popup "info window" when a marker is clicked on the map --> 
<style> 
    .infoDiv { 
        height: 200px; 
        width: 300px; 
        -webkit-user-select: none; 
        background-color: white; 
    } 
</style> 
<br /> 
<!-- This is the div that will contain the Google Map --> 
<div id="map_canvas" style="height: 550px;"></div> 
 
<!-- Enclose the Javascript in a "section" so that it is rendered in the correct order after scripts have been loaded etc --> 
@section scripts { 
    <section class="scripts"> 
 
        <script type="text/javascript"> 
 
    <!-- This code tells the browser to execute the "Initialize" method only when the complete document model has been loaded. --> 
    $(document).ready(function () { 
        Initialize(); 
    }); 
 
    // Where all the fun happens 
    function Initialize() { 
 
        var data = function(){
            var tmp = null;
            $.ajax({
            async:false,
            cache: false,
            type: "GET",
             url:  '@Url.Action("SearchByName","Products",new{ name = Model.value})',
            dataType: 'json',
            success: function (result)
            {
            
                tmp = result;
            }
            });
            return tmp;
        }();
        // Google has tweaked their interface somewhat - this tells the api to use that new UI 
        google.maps.visualRefresh = true; 
        var BsAs = new google.maps.LatLng(-34.603722, -58.381592); 
 
        // These are options that set initial zoom level, where the map is centered globally to start, and the type of map to show 
        var mapOptions = { 
            zoom: 12, 
            center: BsAs, 
            mapTypeId: google.maps.MapTypeId.G_NORMAL_MAP 
        }; 
 
        // This makes the div with id "map_canvas" a google map 
        var map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions); 
 
        // a sample list of JSON encoded data of places to visit in Tunisia 
        // you can either make up a JSON list server side, or call it from a controller using JSONResult 
 
        // Using the JQuery "each" selector to iterate through the JSON list and drop marker pins 
        for (var i = 0, length = data.length; i < length; i++) {
            var marker = new google.maps.Marker({ 
                position : new google.maps.LatLng(data[i].latitude, data[i].longitude),
                map: map, 
                title: data[i].price,
            });
            var contentString= "<div class='infoDiv'><h3>"+data[i].productName + "</h3><h4><em>"+ data[i].productBrand + ' - ' + data[i].productBarcode +"</em></h4><p>Aqui el producto se encuentra a <em>$"+ data[i].price + "</em></p></div>" ; 
            google.maps.event.addListener(marker, 'click', getInfoCallback(map, contentString + data[i].adress));
        }
 
            // Make the marker-pin blue! 
 
            // put in some information about each json object - in this case, the opening hours. 

        function getInfoCallback(map, content) {
    var infowindow = new google.maps.InfoWindow({content: content});
    return function() {
            infowindow.setContent(content); 
            infowindow.open(map, this);
        };
}
    } 
 
 
        </script> 
    </section> 
} 