@model MejorPrecio3.MVC.Models.PriceViewModel


<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
<script src="~/js/jquery.easy-autocomplete.min.js"></script> 

<!-- CSS file -->
<link rel="stylesheet" href="~/js/easy-autocomplete.min.css"> 

<!-- Additional CSS Themes file - not required-->
<link rel="stylesheet" href="~/js/easy-autocomplete.themes.min.css"> 



<hr />
<div class="row">
    <div class="col-md-4">
            @using (Html.BeginForm("", "Prices", FormMethod.Post))
            {
        
       <div>

                 <label class="control-label">Product Name</label>
                <input  asp-for="selectedProduct" class="form-control" id="provider-remote" />
                <span  class="text-danger"></span>
        
                <label asp-for="price" class="control-label">Price</label>
                <input asp-for="price" class="form-control" />
                <span asp-validation-for="price" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="location" class="control-label">Location</label>
                 <input asp-for="location" class="form-control" style="width:130%" id="autocomplete" placeholder="Enter your address" onFocus="geolocate()" type="text"></input>
                <span asp-validation-for="location" class="text-danger"></span>
            </div>
            <input type="submit" value="Subir Producto" />
            }
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}







<script>
var options = {
  url: function(phrase) {
    return "/Prices/list?Prefix=" + phrase ;
  },

    getValue: "name",
    list: {
		match: {
			enabled: true
		},
		maxNumberOfElements: 8
	},

	theme: "plate-dark"
};

$("#provider-remote").easyAutocomplete(options);
</script>






 <script>
      var placeSearch, autocomplete;
      var componentForm = {
        street_number: 'short_name',
        route: 'long_name',
        locality: 'long_name',
        administrative_area_level_1: 'short_name',
        country: 'long_name',
        postal_code: 'short_name'
      };

      function initAutocomplete() {
        // Create the autocomplete object, restricting the search to geographical
        // location types.
        autocomplete = new google.maps.places.Autocomplete(
            /**  */(document.getElementById('autocomplete')),
            {types: ['geocode'],componentRestrictions: {country: 'ar'}});

        // When the user selects an address from the dropdown, populate the address
        // fields in the form.
        autocomplete.addListener('place_changed', fillInAddress);
      }
    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB1uIkW9GFUyYzo2UQNUzJCaFqyiTmUjQw&libraries=places&callback=initAutocomplete"
        async defer></script>