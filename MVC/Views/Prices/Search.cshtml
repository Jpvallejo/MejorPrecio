@model IEnumerable<MejorPrecio3.MVC.Models.SearchViewModel>


<script src="http://maps.google.com/maps/api/js?key=AIzaSyC-hZmexho9d0YR06bY7q_Bvqj0mcuOna4&sensor=true" type="text/javascript"></script>
<br />

<button type="button" id="list_toggle"><i class="fa fa-list" aria-hidden="true"></i></button>
<button type="button" id="map_toggle"><i class="fa fa-map-marker" aria-hidden="true"></i></button>
<!-- This is the div that will contain the Google Map -->
<div id="map_canvas" style="height: 550px;"></div>


<table id="list" hidden class="table">
    <h2 id="list-title" hidden>@Model.First().productName - @Model.First().productBrand. @Model.First().productBarcode</h2>
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.adress)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.adress)
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Enclose the Javascript in a "section" so that it is rendered in the correct order after scripts have been loaded etc -->
@section scripts {
        <script type="text/javascript">


    <!-- This code tells the browser to execute the "Initialize" method only when the complete document model has been loaded. -->
    $(document).ready(function () {
        Initialize();
    });

    // Where all the fun happens
    function Initialize() {

        var data = @Html.Raw(Json.Serialize(Model));
        if(data.length == 0){
            alert("Producto No Encontrado ");
        }
        // Google has tweaked their interface somewhat - this tells the api to use that new UI
        google.maps.visualRefresh = true;
        var BsAs = new google.maps.LatLng(-34.603722, -58.381592);

        // These are options that set initial zoom level, where the map is centered globally to start, and the type of map to show
        var mapOptions = {
            zoom: 12,
            center: BsAs,
            mapTypeId: google.maps.MapTypeId.G_NORMAL_MAP,
            zoomControl: true,
            mapTypeControl: true,
            scaleControl: true,
            streetViewControl: true,
            rotateControl: true,
            fullscreenControl: true
        };


        // This makes the div with id "map_canvas" a google map
        var map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);

        // a sample list of JSON encoded data of places to visit in Tunisia
        // you can either make up a JSON list server side, or call it from a controller using JSONResult

        // Using the JQuery "each" selector to iterate through the JSON list and drop marker pins
        var geocoder = new google.maps.Geocoder;
        var labels = '12345';
        var labelIndex = 0;
        for (var i = 0, length = data.length; i < length; i++) {
            var coord = new google.maps.LatLng(data[i].latitude, data[i].longitude);
            var marker = new google.maps.Marker({
                position : coord,
                map: map,
                animation: google.maps.Animation.DROP,
                label: labels[labelIndex++ % labels.length],
                title: data[i].price,
            });
            var contentString= "<div class='infoDiv'><h3>"+data[i].productName + "</h3><h4><em>"+ data[i].productBrand + ' - ' + data[i].productBarcode +"</em></h4><p>Aqui el producto se encuentra a <em>$"+ data[i].price + "</em></p> <br> <a href=\"https://www.google.com/maps/search/?api=1&query="+data[i].latitude+","+data[i].longitude+"\" target = \"_blank\">Ver en Google Maps </a></div>" ;
            google.maps.event.addListener(marker, 'click', getInfoCallback(map, contentString + data[i].adress));
        }



        function getInfoCallback(map, content) {
        var infowindow = new google.maps.InfoWindow({content: content});
        return function() {
            infowindow.setContent(content);
            infowindow.open(map, this);
            };
        }
    }


        </script>
        <script>
            $("#list_toggle").click(function () {
                $("#map_canvas").hide("slow");
                $("#list").show("slow");
                $("#list-title").show("fast");

            });
            $("#map_toggle").click(function () {
                $("#list").hide("slow");
                $("#list-title").hide("fast");
                $("#map_canvas").show("slow");
            });
        </script>
}


<style>
    #map_canvas img {
        max-width: none;
    }
</style>

<!-- This css is to give a nice big popup "info window" when a marker is clicked on the map -->
<style>
    .infoDiv {
        height: 200px;
        width: 300px;
        -webkit-user-select: none;
        background-color: white;
    }
</style>